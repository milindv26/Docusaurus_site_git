"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7349],{6618:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var i=s(5893),o=s(1151);const n={sidebar_position:90},r="Greedy Algorithm",a={id:"ml/Algorithms/Greedy Knapsack",title:"Greedy Algorithm",description:"Basics",source:"@site/docs/ml/Algorithms/90. Greedy Knapsack.md",sourceDirName:"ml/Algorithms",slug:"/ml/Algorithms/Greedy Knapsack",permalink:"/Notebooks_Courses/docs/ml/Algorithms/Greedy Knapsack",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:90,frontMatter:{sidebar_position:90},sidebar:"mlSidebar",next:{title:"Decision Tree",permalink:"/Notebooks_Courses/docs/ml/Algorithms/Decision Tree"}},l={},c=[{value:"Basics",id:"basics",level:2},{value:"Demonstration",id:"demonstration",level:2}];function h(e){const t={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"greedy-algorithm",children:"Greedy Algorithm"}),"\n",(0,i.jsx)(t.h2,{id:"basics",children:"Basics"}),"\n",(0,i.jsxs)("div",{style:{textAlign:"justify"},children:[(0,i.jsx)(t.p,{children:"A greedy algorithm is a problem-solving technique that builds up a solution piece by piece, always choosing the next piece that offers the most immediate benefit or the largest local gain. In simpler terms, a greedy algorithm makes a series of choices, each of which looks the best at the moment, without reconsidering those choices later on."}),(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Key Characteristics:"})}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Local Optimization:"})," At each step, the algorithm selects the option that seems the best right now (the local optimum) without worrying about whether it leads to the best global solution."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Greedy Choice Property:"})," The choice made by the algorithm at each step is the one that appears best according to some criterion. This decision is made without considering the future consequences."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Optimal Substructure:"})," A problem has an optimal substructure if an optimal solution to the problem contains optimal solutions to its subproblems."]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsx)(t.h2,{id:"demonstration",children:"Demonstration"}),"\n",(0,i.jsx)(t.p,{children:"Here\u2019s a demonstration of the Greedy Algorithm applied to the fractional knapsack problem.hi"})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>r});var i=s(7294);const o={},n=i.createContext(o);function r(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);